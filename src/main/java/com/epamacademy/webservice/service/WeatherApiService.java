
package com.epamacademy.webservice.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WeatherApiService", targetNamespace = "http://service.webservice.epamacademy.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WeatherApiService {


    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws CannotAddDataException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.AddResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/addRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/addResponse", fault = {
        @FaultAction(className = CannotAddDataException_Exception.class, value = "http://service.webservice.epamacademy.com/WeatherApiService/add/Fault/CannotAddDataException")
    })
    public boolean add(
        @WebParam(name = "arg0", targetNamespace = "")
        Forecast arg0)
        throws CannotAddDataException_Exception
    ;

    /**
     * 
     * @return
     *     returns int
     * @throws DBAccessException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.Count")
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.CountResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/countRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/countResponse", fault = {
        @FaultAction(className = DBAccessException_Exception.class, value = "http://service.webservice.epamacademy.com/WeatherApiService/count/Fault/DBAccessException")
    })
    public int count()
        throws DBAccessException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws CannotAddDataException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addAll", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.AddAll")
    @ResponseWrapper(localName = "addAllResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.AddAllResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/addAllRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/addAllResponse", fault = {
        @FaultAction(className = CannotAddDataException_Exception.class, value = "http://service.webservice.epamacademy.com/WeatherApiService/addAll/Fault/CannotAddDataException")
    })
    public boolean addAll(
        @WebParam(name = "arg0", targetNamespace = "")
        List<Forecast> arg0)
        throws CannotAddDataException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "test", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.Test")
    @ResponseWrapper(localName = "testResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.TestResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/testRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/testResponse")
    public String test();

    /**
     * 
     * @param arg0
     * @return
     *     returns com.epamacademy.webservice.service.Forecast
     * @throws DBAccessException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getForecastByCity", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.GetForecastByCity")
    @ResponseWrapper(localName = "getForecastByCityResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.GetForecastByCityResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/getForecastByCityRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/getForecastByCityResponse", fault = {
        @FaultAction(className = DBAccessException_Exception.class, value = "http://service.webservice.epamacademy.com/WeatherApiService/getForecastByCity/Fault/DBAccessException")
    })
    public Forecast getForecastByCity(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws DBAccessException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.epamacademy.webservice.service.Forecast
     * @throws DBAccessException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getForecastByZipCode", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.GetForecastByZipCode")
    @ResponseWrapper(localName = "getForecastByZipCodeResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.GetForecastByZipCodeResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/getForecastByZipCodeRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/getForecastByZipCodeResponse", fault = {
        @FaultAction(className = DBAccessException_Exception.class, value = "http://service.webservice.epamacademy.com/WeatherApiService/getForecastByZipCode/Fault/DBAccessException")
    })
    public Forecast getForecastByZipCode(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws DBAccessException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.epamacademy.webservice.service.Forecast
     * @throws DBAccessException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getForecastById", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.GetForecastById")
    @ResponseWrapper(localName = "getForecastByIdResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.GetForecastByIdResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/getForecastByIdRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/getForecastByIdResponse", fault = {
        @FaultAction(className = DBAccessException_Exception.class, value = "http://service.webservice.epamacademy.com/WeatherApiService/getForecastById/Fault/DBAccessException")
    })
    public Forecast getForecastById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws DBAccessException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws DBAccessException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteByZipCode", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.DeleteByZipCode")
    @ResponseWrapper(localName = "deleteByZipCodeResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.DeleteByZipCodeResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/deleteByZipCodeRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/deleteByZipCodeResponse", fault = {
        @FaultAction(className = DBAccessException_Exception.class, value = "http://service.webservice.epamacademy.com/WeatherApiService/deleteByZipCode/Fault/DBAccessException")
    })
    public boolean deleteByZipCode(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws DBAccessException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<com.epamacademy.webservice.service.Forecast>
     * @throws DBAccessException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listNonRainy", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.ListNonRainy")
    @ResponseWrapper(localName = "listNonRainyResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.ListNonRainyResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/listNonRainyRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/listNonRainyResponse", fault = {
        @FaultAction(className = DBAccessException_Exception.class, value = "http://service.webservice.epamacademy.com/WeatherApiService/listNonRainy/Fault/DBAccessException")
    })
    public List<Forecast> listNonRainy()
        throws DBAccessException_Exception
    ;

    /**
     * 
     * @return
     *     returns com.epamacademy.webservice.service.Forecast
     * @throws DBAccessException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHottest", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.GetHottest")
    @ResponseWrapper(localName = "getHottestResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.GetHottestResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/getHottestRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/getHottestResponse", fault = {
        @FaultAction(className = DBAccessException_Exception.class, value = "http://service.webservice.epamacademy.com/WeatherApiService/getHottest/Fault/DBAccessException")
    })
    public Forecast getHottest()
        throws DBAccessException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<com.epamacademy.webservice.service.Forecast>
     * @throws DBAccessException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listAll", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.ListAll")
    @ResponseWrapper(localName = "listAllResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.ListAllResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/listAllRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/listAllResponse", fault = {
        @FaultAction(className = DBAccessException_Exception.class, value = "http://service.webservice.epamacademy.com/WeatherApiService/listAll/Fault/DBAccessException")
    })
    public List<Forecast> listAll()
        throws DBAccessException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<com.epamacademy.webservice.service.Forecast>
     * @throws DBAccessException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listRainy", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.ListRainy")
    @ResponseWrapper(localName = "listRainyResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.ListRainyResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/listRainyRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/listRainyResponse", fault = {
        @FaultAction(className = DBAccessException_Exception.class, value = "http://service.webservice.epamacademy.com/WeatherApiService/listRainy/Fault/DBAccessException")
    })
    public List<Forecast> listRainy()
        throws DBAccessException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws DBAccessException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteById", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.DeleteById")
    @ResponseWrapper(localName = "deleteByIdResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.DeleteByIdResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/deleteByIdRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/deleteByIdResponse", fault = {
        @FaultAction(className = DBAccessException_Exception.class, value = "http://service.webservice.epamacademy.com/WeatherApiService/deleteById/Fault/DBAccessException")
    })
    public boolean deleteById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws DBAccessException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws DBAccessException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteByCity", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.DeleteByCity")
    @ResponseWrapper(localName = "deleteByCityResponse", targetNamespace = "http://service.webservice.epamacademy.com/", className = "com.epamacademy.webservice.service.DeleteByCityResponse")
    @Action(input = "http://service.webservice.epamacademy.com/WeatherApiService/deleteByCityRequest", output = "http://service.webservice.epamacademy.com/WeatherApiService/deleteByCityResponse", fault = {
        @FaultAction(className = DBAccessException_Exception.class, value = "http://service.webservice.epamacademy.com/WeatherApiService/deleteByCity/Fault/DBAccessException")
    })
    public boolean deleteByCity(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws DBAccessException_Exception
    ;

}
